services:
  db_test:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres_test
      POSTGRES_PASSWORD: postgres_test
      POSTGRES_DB: postgres_test
    ports:
      - "5433:5432"  # Different port to avoid conflicts with dev database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI for inspecting emails
    networks:
      - test-network

  api_test:
    build:
      context: .
      dockerfile: tests/Dockerfile.test
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - POSTGRES_USER=postgres_test
      - POSTGRES_PASSWORD=postgres_test
      - POSTGRES_DB=postgres_test
      - POSTGRES_SERVER=db_test
      - POSTGRES_PORT=5432
      - MODE=TEST
      - SERVER_SECRET=test_secret_key
      - AES_KEY=VGhpcyBpcyBqdXN0IGEgdGVzdCBLZXkgZm9yIHRlc3Rpbmcgb25seQ==
      - MAIL_USERNAME=test
      - MAIL_PASSWORD=test
      - MAIL_FROM=test@example.com
      - MAIL_PORT=1025
      - MAIL_SERVER=mailhog
      - MAIL_STARTTLS=false
      - MAIL_SSL_TLS=false
      - VER_URL=http://localhost:8000/auth/verify
      - RESET_URL=http://localhost:8000/auth/reset-password
    volumes:
      - .:/app
      - ./coverage:/app/coverage
    depends_on:
      db_test:
        condition: service_healthy
    networks:
      - test-network
    command: >
      sh -c "python -m pytest ${PYTEST_ARGS:-tests/}"

networks:
  test-network:
    driver: bridge